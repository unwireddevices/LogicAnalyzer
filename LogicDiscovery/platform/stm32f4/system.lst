   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.align	1
  17              		.global	SystemInit
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	SystemInit:
  24              	.LFB110:
  25              		.file 1 "./platform/stm32f4/system.c"
   1:./platform/stm32f4/system.c **** /**
   2:./platform/stm32f4/system.c ****   ******************************************************************************
   3:./platform/stm32f4/system.c ****   * @file    system_stm32f4xx.c
   4:./platform/stm32f4/system.c ****   * @author  MCD Application Team
   5:./platform/stm32f4/system.c ****   * @version V1.0.1
   6:./platform/stm32f4/system.c ****   * @date    17-November-2012
   7:./platform/stm32f4/system.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:./platform/stm32f4/system.c ****   *          This file contains the system clock configuration for STM32F4xx devices,
   9:./platform/stm32f4/system.c ****   *          and is generated by the clock configuration tool
  10:./platform/stm32f4/system.c ****   *          stm32f4xx_Clock_Configuration_V1.0.1.xls
  11:./platform/stm32f4/system.c ****   *             
  12:./platform/stm32f4/system.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:./platform/stm32f4/system.c ****   *     user application:
  14:./platform/stm32f4/system.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:./platform/stm32f4/system.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:./platform/stm32f4/system.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:./platform/stm32f4/system.c ****   *                      This function is called at startup just after reset and 
  18:./platform/stm32f4/system.c ****   *                      before branch to main program. This call is made inside
  19:./platform/stm32f4/system.c ****   *                      the "startup_stm32f4xx.s" file.
  20:./platform/stm32f4/system.c ****   *
  21:./platform/stm32f4/system.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:./platform/stm32f4/system.c ****   *                                  by the user application to setup the SysTick 
  23:./platform/stm32f4/system.c ****   *                                  timer or configure other parameters.
  24:./platform/stm32f4/system.c ****   *                                     
  25:./platform/stm32f4/system.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:./platform/stm32f4/system.c ****   *                                 be called whenever the core clock is changed
  27:./platform/stm32f4/system.c ****   *                                 during program execution.
  28:./platform/stm32f4/system.c ****   *
  29:./platform/stm32f4/system.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:./platform/stm32f4/system.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  31:./platform/stm32f4/system.c ****   *    configure the system clock before to branch to main program.
  32:./platform/stm32f4/system.c ****   *
  33:./platform/stm32f4/system.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:./platform/stm32f4/system.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:./platform/stm32f4/system.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:./platform/stm32f4/system.c ****   *
  37:./platform/stm32f4/system.c ****   * 4. The default value of HSE crystal is set to 25MHz, refer to "HSE_VALUE" define
  38:./platform/stm32f4/system.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
  39:./platform/stm32f4/system.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:./platform/stm32f4/system.c ****   *    value to your own configuration.
  41:./platform/stm32f4/system.c ****   *
  42:./platform/stm32f4/system.c ****   * 5. This file configures the system clock as follows:
  43:./platform/stm32f4/system.c ****   *=============================================================================
  44:./platform/stm32f4/system.c ****   *=============================================================================
  45:./platform/stm32f4/system.c ****   *        Supported STM32F4xx device revision    | Rev A
  46:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  47:./platform/stm32f4/system.c ****   *        System Clock source                    | PLL (HSE)
  48:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  49:./platform/stm32f4/system.c ****   *        SYSCLK(Hz)                             | 120000000
  50:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  51:./platform/stm32f4/system.c ****   *        HCLK(Hz)                               | 120000000
  52:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  53:./platform/stm32f4/system.c ****   *        AHB Prescaler                          | 1
  54:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  55:./platform/stm32f4/system.c ****   *        APB1 Prescaler                         | 4
  56:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  57:./platform/stm32f4/system.c ****   *        APB2 Prescaler                         | 2
  58:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  59:./platform/stm32f4/system.c ****   *        HSE Frequency(Hz)                      | 8000000
  60:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  61:./platform/stm32f4/system.c ****   *        PLL_M                                  | 8
  62:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  63:./platform/stm32f4/system.c ****   *        PLL_N                                  | 240
  64:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  65:./platform/stm32f4/system.c ****   *        PLL_P                                  | 2
  66:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  67:./platform/stm32f4/system.c ****   *        PLL_Q                                  | 5
  68:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  69:./platform/stm32f4/system.c ****   *        PLLI2S_N                               | NA
  70:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  71:./platform/stm32f4/system.c ****   *        PLLI2S_R                               | NA
  72:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  73:./platform/stm32f4/system.c ****   *        I2S input clock                        | NA
  74:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  75:./platform/stm32f4/system.c ****   *        VDD(V)                                 | 3.3
  76:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  77:./platform/stm32f4/system.c ****   *        Main regulator output voltage          | Scale2 mode
  78:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  79:./platform/stm32f4/system.c ****   *        Flash Latency(WS)                      | 3
  80:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  81:./platform/stm32f4/system.c ****   *        Prefetch Buffer                        | OFF
  82:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  83:./platform/stm32f4/system.c ****   *        Instruction cache                      | ON
  84:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  85:./platform/stm32f4/system.c ****   *        Data cache                             | ON
  86:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  87:./platform/stm32f4/system.c ****   *        Require 48MHz for USB OTG FS,          | Enabled
  88:./platform/stm32f4/system.c ****   *        SDIO and RNG clock                     |
  89:./platform/stm32f4/system.c ****   *-----------------------------------------------------------------------------
  90:./platform/stm32f4/system.c ****   *=============================================================================
  91:./platform/stm32f4/system.c ****   ****************************************************************************** 
  92:./platform/stm32f4/system.c ****   * @attention
  93:./platform/stm32f4/system.c ****   *
  94:./platform/stm32f4/system.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  95:./platform/stm32f4/system.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  96:./platform/stm32f4/system.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  97:./platform/stm32f4/system.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  98:./platform/stm32f4/system.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  99:./platform/stm32f4/system.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 100:./platform/stm32f4/system.c ****   *
 101:./platform/stm32f4/system.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 102:./platform/stm32f4/system.c ****   ******************************************************************************
 103:./platform/stm32f4/system.c ****   */
 104:./platform/stm32f4/system.c **** 
 105:./platform/stm32f4/system.c **** /** @addtogroup CMSIS
 106:./platform/stm32f4/system.c ****   * @{
 107:./platform/stm32f4/system.c ****   */
 108:./platform/stm32f4/system.c **** 
 109:./platform/stm32f4/system.c **** /** @addtogroup stm32f4xx_system
 110:./platform/stm32f4/system.c ****   * @{
 111:./platform/stm32f4/system.c ****   */  
 112:./platform/stm32f4/system.c ****   
 113:./platform/stm32f4/system.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 114:./platform/stm32f4/system.c ****   * @{
 115:./platform/stm32f4/system.c ****   */
 116:./platform/stm32f4/system.c **** 
 117:./platform/stm32f4/system.c **** #include "stm32f4xx.h"
 118:./platform/stm32f4/system.c **** 
 119:./platform/stm32f4/system.c **** /**
 120:./platform/stm32f4/system.c ****   * @}
 121:./platform/stm32f4/system.c ****   */
 122:./platform/stm32f4/system.c **** 
 123:./platform/stm32f4/system.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 124:./platform/stm32f4/system.c ****   * @{
 125:./platform/stm32f4/system.c ****   */
 126:./platform/stm32f4/system.c **** 
 127:./platform/stm32f4/system.c **** /**
 128:./platform/stm32f4/system.c ****   * @}
 129:./platform/stm32f4/system.c ****   */
 130:./platform/stm32f4/system.c **** 
 131:./platform/stm32f4/system.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 132:./platform/stm32f4/system.c ****   * @{
 133:./platform/stm32f4/system.c ****   */
 134:./platform/stm32f4/system.c **** 
 135:./platform/stm32f4/system.c **** /************************* Miscellaneous Configuration ************************/
 136:./platform/stm32f4/system.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 137:./platform/stm32f4/system.c ****      on STM324xG_EVAL board as data memory  */
 138:./platform/stm32f4/system.c **** /* #define DATA_IN_ExtSRAM */
 139:./platform/stm32f4/system.c **** 
 140:./platform/stm32f4/system.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 141:./platform/stm32f4/system.c ****      Internal SRAM. */
 142:./platform/stm32f4/system.c **** /* #define VECT_TAB_SRAM */
 143:./platform/stm32f4/system.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 144:./platform/stm32f4/system.c ****                                    This value must be a multiple of 0x200. */
 145:./platform/stm32f4/system.c **** /******************************************************************************/
 146:./platform/stm32f4/system.c **** 
 147:./platform/stm32f4/system.c **** /************************* PLL Parameters *************************************/
 148:./platform/stm32f4/system.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 149:./platform/stm32f4/system.c **** #define PLL_M      8
 150:./platform/stm32f4/system.c **** #define PLL_N      240
 151:./platform/stm32f4/system.c **** 
 152:./platform/stm32f4/system.c **** /* SYSCLK = PLL_VCO / PLL_P */
 153:./platform/stm32f4/system.c **** #define PLL_P      2
 154:./platform/stm32f4/system.c **** 
 155:./platform/stm32f4/system.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 156:./platform/stm32f4/system.c **** #define PLL_Q      5
 157:./platform/stm32f4/system.c **** 
 158:./platform/stm32f4/system.c **** /******************************************************************************/
 159:./platform/stm32f4/system.c **** 
 160:./platform/stm32f4/system.c **** /**
 161:./platform/stm32f4/system.c ****   * @}
 162:./platform/stm32f4/system.c ****   */
 163:./platform/stm32f4/system.c **** 
 164:./platform/stm32f4/system.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 165:./platform/stm32f4/system.c ****   * @{
 166:./platform/stm32f4/system.c ****   */
 167:./platform/stm32f4/system.c **** 
 168:./platform/stm32f4/system.c **** /**
 169:./platform/stm32f4/system.c ****   * @}
 170:./platform/stm32f4/system.c ****   */
 171:./platform/stm32f4/system.c **** 
 172:./platform/stm32f4/system.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 173:./platform/stm32f4/system.c ****   * @{
 174:./platform/stm32f4/system.c ****   */
 175:./platform/stm32f4/system.c **** 
 176:./platform/stm32f4/system.c ****   uint32_t SystemCoreClock = 120000000;
 177:./platform/stm32f4/system.c **** 
 178:./platform/stm32f4/system.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 179:./platform/stm32f4/system.c **** 
 180:./platform/stm32f4/system.c **** /**
 181:./platform/stm32f4/system.c ****   * @}
 182:./platform/stm32f4/system.c ****   */
 183:./platform/stm32f4/system.c **** 
 184:./platform/stm32f4/system.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 185:./platform/stm32f4/system.c ****   * @{
 186:./platform/stm32f4/system.c ****   */
 187:./platform/stm32f4/system.c **** 
 188:./platform/stm32f4/system.c **** static void SetSysClock(void);
 189:./platform/stm32f4/system.c **** #ifdef DATA_IN_ExtSRAM
 190:./platform/stm32f4/system.c ****   static void SystemInit_ExtMemCtl(void); 
 191:./platform/stm32f4/system.c **** #endif /* DATA_IN_ExtSRAM */
 192:./platform/stm32f4/system.c **** 
 193:./platform/stm32f4/system.c **** /**
 194:./platform/stm32f4/system.c ****   * @}
 195:./platform/stm32f4/system.c ****   */
 196:./platform/stm32f4/system.c **** 
 197:./platform/stm32f4/system.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 198:./platform/stm32f4/system.c ****   * @{
 199:./platform/stm32f4/system.c ****   */
 200:./platform/stm32f4/system.c **** 
 201:./platform/stm32f4/system.c **** /**
 202:./platform/stm32f4/system.c ****   * @brief  Setup the microcontroller system
 203:./platform/stm32f4/system.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 204:./platform/stm32f4/system.c ****   *         SystemFrequency variable.
 205:./platform/stm32f4/system.c ****   * @param  None
 206:./platform/stm32f4/system.c ****   * @retval None
 207:./platform/stm32f4/system.c ****   */
 208:./platform/stm32f4/system.c **** void SystemInit(void)
 209:./platform/stm32f4/system.c **** {
  26              		.loc 1 209 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 210:./platform/stm32f4/system.c ****   /* FPU settings ------------------------------------------------------------*/
 211:./platform/stm32f4/system.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 212:./platform/stm32f4/system.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
  31              		.loc 1 212 0
  32 0000 364A     		ldr	r2, .L13
  33 0002 D2F88830 		ldr	r3, [r2, #136]
  34 0006 43F47003 		orr	r3, r3, #15728640
  35 000a C2F88830 		str	r3, [r2, #136]
 213:./platform/stm32f4/system.c ****   #endif
 214:./platform/stm32f4/system.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 215:./platform/stm32f4/system.c ****   /* Set HSION bit */
 216:./platform/stm32f4/system.c ****   RCC->CR |= (uint32_t)0x00000001;
  36              		.loc 1 216 0
  37 000e 344B     		ldr	r3, .L13+4
  38 0010 1A68     		ldr	r2, [r3]
 217:./platform/stm32f4/system.c **** 
 218:./platform/stm32f4/system.c ****   /* Reset CFGR register */
 219:./platform/stm32f4/system.c ****   RCC->CFGR = 0x00000000;
  39              		.loc 1 219 0
  40 0012 0021     		movs	r1, #0
 216:./platform/stm32f4/system.c **** 
  41              		.loc 1 216 0
  42 0014 42F00102 		orr	r2, r2, #1
  43 0018 1A60     		str	r2, [r3]
  44              		.loc 1 219 0
  45 001a 9960     		str	r1, [r3, #8]
 220:./platform/stm32f4/system.c **** 
 221:./platform/stm32f4/system.c ****   /* Reset HSEON, CSSON and PLLON bits */
 222:./platform/stm32f4/system.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  46              		.loc 1 222 0
  47 001c 1A68     		ldr	r2, [r3]
  48 001e 22F08472 		bic	r2, r2, #17301504
  49 0022 22F48032 		bic	r2, r2, #65536
  50 0026 1A60     		str	r2, [r3]
 223:./platform/stm32f4/system.c **** 
 224:./platform/stm32f4/system.c ****   /* Reset PLLCFGR register */
 225:./platform/stm32f4/system.c ****   RCC->PLLCFGR = 0x24003010;
  51              		.loc 1 225 0
  52 0028 2E4A     		ldr	r2, .L13+8
  53 002a 5A60     		str	r2, [r3, #4]
 226:./platform/stm32f4/system.c **** 
 227:./platform/stm32f4/system.c ****   /* Reset HSEBYP bit */
 228:./platform/stm32f4/system.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  54              		.loc 1 228 0
  55 002c 1A68     		ldr	r2, [r3]
 209:./platform/stm32f4/system.c ****   /* FPU settings ------------------------------------------------------------*/
  56              		.loc 1 209 0
  57 002e 82B0     		sub	sp, sp, #8
  58              	.LCFI0:
  59              		.cfi_def_cfa_offset 8
  60              		.loc 1 228 0
  61 0030 22F48022 		bic	r2, r2, #262144
  62 0034 1A60     		str	r2, [r3]
 229:./platform/stm32f4/system.c **** 
 230:./platform/stm32f4/system.c ****   /* Disable all interrupts */
 231:./platform/stm32f4/system.c ****   RCC->CIR = 0x00000000;
  63              		.loc 1 231 0
  64 0036 D960     		str	r1, [r3, #12]
  65              	.LBB4:
  66              	.LBB5:
 232:./platform/stm32f4/system.c **** 
 233:./platform/stm32f4/system.c **** #ifdef DATA_IN_ExtSRAM
 234:./platform/stm32f4/system.c ****   SystemInit_ExtMemCtl(); 
 235:./platform/stm32f4/system.c **** #endif /* DATA_IN_ExtSRAM */
 236:./platform/stm32f4/system.c ****          
 237:./platform/stm32f4/system.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 238:./platform/stm32f4/system.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 239:./platform/stm32f4/system.c ****   SetSysClock();
 240:./platform/stm32f4/system.c **** 
 241:./platform/stm32f4/system.c ****   /* Configure the Vector Table location add offset address ------------------*/
 242:./platform/stm32f4/system.c **** #ifdef VECT_TAB_SRAM
 243:./platform/stm32f4/system.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 244:./platform/stm32f4/system.c **** #else
 245:./platform/stm32f4/system.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 246:./platform/stm32f4/system.c **** #endif
 247:./platform/stm32f4/system.c **** }
 248:./platform/stm32f4/system.c **** 
 249:./platform/stm32f4/system.c **** /**
 250:./platform/stm32f4/system.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 251:./platform/stm32f4/system.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 252:./platform/stm32f4/system.c ****   *         be used by the user application to setup the SysTick timer or configure
 253:./platform/stm32f4/system.c ****   *         other parameters.
 254:./platform/stm32f4/system.c ****   *           
 255:./platform/stm32f4/system.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 256:./platform/stm32f4/system.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 257:./platform/stm32f4/system.c ****   *         based on this variable will be incorrect.         
 258:./platform/stm32f4/system.c ****   *     
 259:./platform/stm32f4/system.c ****   * @note   - The system frequency computed by this function is not the real 
 260:./platform/stm32f4/system.c ****   *           frequency in the chip. It is calculated based on the predefined 
 261:./platform/stm32f4/system.c ****   *           constant and the selected clock source:
 262:./platform/stm32f4/system.c ****   *             
 263:./platform/stm32f4/system.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 264:./platform/stm32f4/system.c ****   *                                              
 265:./platform/stm32f4/system.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 266:./platform/stm32f4/system.c ****   *                          
 267:./platform/stm32f4/system.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 268:./platform/stm32f4/system.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 269:./platform/stm32f4/system.c ****   *         
 270:./platform/stm32f4/system.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 271:./platform/stm32f4/system.c ****   *             16 MHz) but the real value may vary depending on the variations
 272:./platform/stm32f4/system.c ****   *             in voltage and temperature.   
 273:./platform/stm32f4/system.c ****   *    
 274:./platform/stm32f4/system.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 275:./platform/stm32f4/system.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 276:./platform/stm32f4/system.c ****   *              frequency of the crystal used. Otherwise, this function may
 277:./platform/stm32f4/system.c ****   *              have wrong result.
 278:./platform/stm32f4/system.c ****   *                
 279:./platform/stm32f4/system.c ****   *         - The result of this function could be not correct when using fractional
 280:./platform/stm32f4/system.c ****   *           value for HSE crystal.
 281:./platform/stm32f4/system.c ****   *     
 282:./platform/stm32f4/system.c ****   * @param  None
 283:./platform/stm32f4/system.c ****   * @retval None
 284:./platform/stm32f4/system.c ****   */
 285:./platform/stm32f4/system.c **** void SystemCoreClockUpdate(void)
 286:./platform/stm32f4/system.c **** {
 287:./platform/stm32f4/system.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 288:./platform/stm32f4/system.c ****   
 289:./platform/stm32f4/system.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 290:./platform/stm32f4/system.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 291:./platform/stm32f4/system.c **** 
 292:./platform/stm32f4/system.c ****   switch (tmp)
 293:./platform/stm32f4/system.c ****   {
 294:./platform/stm32f4/system.c ****     case 0x00:  /* HSI used as system clock source */
 295:./platform/stm32f4/system.c ****       SystemCoreClock = HSI_VALUE;
 296:./platform/stm32f4/system.c ****       break;
 297:./platform/stm32f4/system.c ****     case 0x04:  /* HSE used as system clock source */
 298:./platform/stm32f4/system.c ****       SystemCoreClock = HSE_VALUE;
 299:./platform/stm32f4/system.c ****       break;
 300:./platform/stm32f4/system.c ****     case 0x08:  /* PLL used as system clock source */
 301:./platform/stm32f4/system.c **** 
 302:./platform/stm32f4/system.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 303:./platform/stm32f4/system.c ****          SYSCLK = PLL_VCO / PLL_P
 304:./platform/stm32f4/system.c ****          */    
 305:./platform/stm32f4/system.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 306:./platform/stm32f4/system.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 307:./platform/stm32f4/system.c ****       
 308:./platform/stm32f4/system.c ****       if (pllsource != 0)
 309:./platform/stm32f4/system.c ****       {
 310:./platform/stm32f4/system.c ****         /* HSE used as PLL clock source */
 311:./platform/stm32f4/system.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 312:./platform/stm32f4/system.c ****       }
 313:./platform/stm32f4/system.c ****       else
 314:./platform/stm32f4/system.c ****       {
 315:./platform/stm32f4/system.c ****         /* HSI used as PLL clock source */
 316:./platform/stm32f4/system.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 317:./platform/stm32f4/system.c ****       }
 318:./platform/stm32f4/system.c **** 
 319:./platform/stm32f4/system.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 320:./platform/stm32f4/system.c ****       SystemCoreClock = pllvco/pllp;
 321:./platform/stm32f4/system.c ****       break;
 322:./platform/stm32f4/system.c ****     default:
 323:./platform/stm32f4/system.c ****       SystemCoreClock = HSI_VALUE;
 324:./platform/stm32f4/system.c ****       break;
 325:./platform/stm32f4/system.c ****   }
 326:./platform/stm32f4/system.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 327:./platform/stm32f4/system.c ****   /* Get HCLK prescaler */
 328:./platform/stm32f4/system.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 329:./platform/stm32f4/system.c ****   /* HCLK frequency */
 330:./platform/stm32f4/system.c ****   SystemCoreClock >>= tmp;
 331:./platform/stm32f4/system.c **** }
 332:./platform/stm32f4/system.c **** 
 333:./platform/stm32f4/system.c **** /**
 334:./platform/stm32f4/system.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 335:./platform/stm32f4/system.c ****   *         AHB/APBx prescalers and Flash settings
 336:./platform/stm32f4/system.c ****   * @Note   This function should be called only once the RCC clock configuration  
 337:./platform/stm32f4/system.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 338:./platform/stm32f4/system.c ****   * @param  None
 339:./platform/stm32f4/system.c ****   * @retval None
 340:./platform/stm32f4/system.c ****   */
 341:./platform/stm32f4/system.c **** static void SetSysClock(void)
 342:./platform/stm32f4/system.c **** {
 343:./platform/stm32f4/system.c **** /******************************************************************************/
 344:./platform/stm32f4/system.c **** /*            PLL (clocked by HSE) used as System clock source                */
 345:./platform/stm32f4/system.c **** /******************************************************************************/
 346:./platform/stm32f4/system.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  67              		.loc 1 346 0
  68 0038 0091     		str	r1, [sp]
  69 003a 0191     		str	r1, [sp, #4]
 347:./platform/stm32f4/system.c ****   
 348:./platform/stm32f4/system.c ****   /* Enable HSE */
 349:./platform/stm32f4/system.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  70              		.loc 1 349 0
  71 003c 1A68     		ldr	r2, [r3]
  72 003e 42F48032 		orr	r2, r2, #65536
  73 0042 1A60     		str	r2, [r3]
  74 0044 1946     		mov	r1, r3
  75              	.L3:
 350:./platform/stm32f4/system.c ****  
 351:./platform/stm32f4/system.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 352:./platform/stm32f4/system.c ****   do
 353:./platform/stm32f4/system.c ****   {
 354:./platform/stm32f4/system.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
  76              		.loc 1 354 0
  77 0046 1A68     		ldr	r2, [r3]
  78 0048 02F40032 		and	r2, r2, #131072
  79 004c 0192     		str	r2, [sp, #4]
 355:./platform/stm32f4/system.c ****     StartUpCounter++;
  80              		.loc 1 355 0
  81 004e 009A     		ldr	r2, [sp]
  82 0050 0132     		adds	r2, r2, #1
  83 0052 0092     		str	r2, [sp]
 356:./platform/stm32f4/system.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
  84              		.loc 1 356 0
  85 0054 019A     		ldr	r2, [sp, #4]
  86 0056 1AB9     		cbnz	r2, .L2
  87 0058 009A     		ldr	r2, [sp]
  88 005a B2F5A06F 		cmp	r2, #1280
  89 005e F2D1     		bne	.L3
  90              	.L2:
 357:./platform/stm32f4/system.c **** 
 358:./platform/stm32f4/system.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
  91              		.loc 1 358 0
  92 0060 0B68     		ldr	r3, [r1]
  93 0062 13F40033 		ands	r3, r3, #131072
 359:./platform/stm32f4/system.c ****   {
 360:./platform/stm32f4/system.c ****     HSEStatus = (uint32_t)0x01;
  94              		.loc 1 360 0
  95 0066 18BF     		it	ne
  96 0068 0123     		movne	r3, #1
 361:./platform/stm32f4/system.c ****   }
 362:./platform/stm32f4/system.c ****   else
 363:./platform/stm32f4/system.c ****   {
 364:./platform/stm32f4/system.c ****     HSEStatus = (uint32_t)0x00;
  97              		.loc 1 364 0
  98 006a 0193     		str	r3, [sp, #4]
 365:./platform/stm32f4/system.c ****   }
 366:./platform/stm32f4/system.c **** 
 367:./platform/stm32f4/system.c ****   if (HSEStatus == (uint32_t)0x01)
  99              		.loc 1 367 0
 100 006c 019B     		ldr	r3, [sp, #4]
 101 006e 012B     		cmp	r3, #1
 102 0070 2ED1     		bne	.L6
 368:./platform/stm32f4/system.c ****   {
 369:./platform/stm32f4/system.c ****     /* Select regulator voltage output Scale 2 mode, System frequency up to 144 MHz */
 370:./platform/stm32f4/system.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 103              		.loc 1 370 0
 104 0072 1B4B     		ldr	r3, .L13+4
 371:./platform/stm32f4/system.c ****     PWR->CR &= (uint32_t)~(PWR_CR_VOS);
 105              		.loc 1 371 0
 106 0074 1C49     		ldr	r1, .L13+12
 370:./platform/stm32f4/system.c ****     PWR->CR &= (uint32_t)~(PWR_CR_VOS);
 107              		.loc 1 370 0
 108 0076 1A6C     		ldr	r2, [r3, #64]
 109 0078 42F08052 		orr	r2, r2, #268435456
 110 007c 1A64     		str	r2, [r3, #64]
 111              		.loc 1 371 0
 112 007e 0A68     		ldr	r2, [r1]
 113 0080 22F48042 		bic	r2, r2, #16384
 114 0084 0A60     		str	r2, [r1]
 372:./platform/stm32f4/system.c **** 
 373:./platform/stm32f4/system.c ****     /* HCLK = SYSCLK / 1*/
 374:./platform/stm32f4/system.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 115              		.loc 1 374 0
 116 0086 9A68     		ldr	r2, [r3, #8]
 117 0088 9A60     		str	r2, [r3, #8]
 375:./platform/stm32f4/system.c ****       
 376:./platform/stm32f4/system.c ****     /* PCLK2 = HCLK / 2*/
 377:./platform/stm32f4/system.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 118              		.loc 1 377 0
 119 008a 9A68     		ldr	r2, [r3, #8]
 120 008c 42F40042 		orr	r2, r2, #32768
 121 0090 9A60     		str	r2, [r3, #8]
 378:./platform/stm32f4/system.c ****     
 379:./platform/stm32f4/system.c ****     /* PCLK1 = HCLK / 4*/
 380:./platform/stm32f4/system.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 122              		.loc 1 380 0
 123 0092 9A68     		ldr	r2, [r3, #8]
 124 0094 42F4A052 		orr	r2, r2, #5120
 125 0098 9A60     		str	r2, [r3, #8]
 381:./platform/stm32f4/system.c **** 
 382:./platform/stm32f4/system.c ****     /* Configure the main PLL */
 383:./platform/stm32f4/system.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 126              		.loc 1 383 0
 127 009a 144A     		ldr	r2, .L13+16
 128 009c 5A60     		str	r2, [r3, #4]
 384:./platform/stm32f4/system.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 385:./platform/stm32f4/system.c **** 
 386:./platform/stm32f4/system.c ****     /* Enable the main PLL */
 387:./platform/stm32f4/system.c ****     RCC->CR |= RCC_CR_PLLON;
 129              		.loc 1 387 0
 130 009e 1A68     		ldr	r2, [r3]
 131 00a0 42F08072 		orr	r2, r2, #16777216
 132 00a4 1A60     		str	r2, [r3]
 133              	.L7:
 388:./platform/stm32f4/system.c **** 
 389:./platform/stm32f4/system.c ****     /* Wait till the main PLL is ready */
 390:./platform/stm32f4/system.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 134              		.loc 1 390 0
 135 00a6 1A68     		ldr	r2, [r3]
 136 00a8 9201     		lsls	r2, r2, #6
 137 00aa FCD5     		bpl	.L7
 391:./platform/stm32f4/system.c ****     {
 392:./platform/stm32f4/system.c ****     }
 393:./platform/stm32f4/system.c ****    
 394:./platform/stm32f4/system.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 395:./platform/stm32f4/system.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_3WS;
 138              		.loc 1 395 0
 139 00ac 104A     		ldr	r2, .L13+20
 140 00ae 40F20361 		movw	r1, #1539
 141 00b2 1160     		str	r1, [r2]
 396:./platform/stm32f4/system.c **** 
 397:./platform/stm32f4/system.c ****     /* Select the main PLL as system clock source */
 398:./platform/stm32f4/system.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 142              		.loc 1 398 0
 143 00b4 9A68     		ldr	r2, [r3, #8]
 144 00b6 22F00302 		bic	r2, r2, #3
 145 00ba 9A60     		str	r2, [r3, #8]
 399:./platform/stm32f4/system.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 146              		.loc 1 399 0
 147 00bc 9A68     		ldr	r2, [r3, #8]
 148 00be 42F00202 		orr	r2, r2, #2
 149 00c2 9A60     		str	r2, [r3, #8]
 400:./platform/stm32f4/system.c **** 
 401:./platform/stm32f4/system.c ****     /* Wait till the main PLL is used as system clock source */
 402:./platform/stm32f4/system.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 150              		.loc 1 402 0
 151 00c4 064A     		ldr	r2, .L13+4
 152              	.L8:
 153 00c6 9368     		ldr	r3, [r2, #8]
 154 00c8 03F00C03 		and	r3, r3, #12
 155 00cc 082B     		cmp	r3, #8
 156 00ce FAD1     		bne	.L8
 157              	.L6:
 158              	.LBE5:
 159              	.LBE4:
 245:./platform/stm32f4/system.c **** #endif
 160              		.loc 1 245 0
 161 00d0 024B     		ldr	r3, .L13
 162 00d2 4FF00062 		mov	r2, #134217728
 163 00d6 9A60     		str	r2, [r3, #8]
 247:./platform/stm32f4/system.c **** 
 164              		.loc 1 247 0
 165 00d8 02B0     		add	sp, sp, #8
 166              	.LCFI1:
 167              		.cfi_def_cfa_offset 0
 168              		@ sp needed
 169 00da 7047     		bx	lr
 170              	.L14:
 171              		.align	2
 172              	.L13:
 173 00dc 00ED00E0 		.word	-536810240
 174 00e0 00380240 		.word	1073887232
 175 00e4 10300024 		.word	603992080
 176 00e8 00700040 		.word	1073770496
 177 00ec 083C4005 		.word	88095752
 178 00f0 003C0240 		.word	1073888256
 179              		.cfi_endproc
 180              	.LFE110:
 182              		.align	1
 183              		.global	SystemCoreClockUpdate
 184              		.syntax unified
 185              		.thumb
 186              		.thumb_func
 187              		.fpu fpv4-sp-d16
 189              	SystemCoreClockUpdate:
 190              	.LFB111:
 286:./platform/stm32f4/system.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 191              		.loc 1 286 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              	.LVL0:
 290:./platform/stm32f4/system.c **** 
 196              		.loc 1 290 0
 197 00f4 174A     		ldr	r2, .L24
 198 00f6 1849     		ldr	r1, .L24+4
 199 00f8 9368     		ldr	r3, [r2, #8]
 200              	.LVL1:
 201 00fa 03F00C03 		and	r3, r3, #12
 202              	.LVL2:
 292:./platform/stm32f4/system.c ****   {
 203              		.loc 1 292 0
 204 00fe 042B     		cmp	r3, #4
 286:./platform/stm32f4/system.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 205              		.loc 1 286 0
 206 0100 10B5     		push	{r4, lr}
 207              	.LCFI2:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
 292:./platform/stm32f4/system.c ****   {
 211              		.loc 1 292 0
 212 0102 0DD0     		beq	.L17
 213 0104 082B     		cmp	r3, #8
 214 0106 0DD0     		beq	.L18
 295:./platform/stm32f4/system.c ****       break;
 215              		.loc 1 295 0
 216 0108 144B     		ldr	r3, .L24+8
 217              	.LVL3:
 218              	.L23:
 320:./platform/stm32f4/system.c ****       break;
 219              		.loc 1 320 0
 220 010a 0B60     		str	r3, [r1]
 328:./platform/stm32f4/system.c ****   /* HCLK frequency */
 221              		.loc 1 328 0
 222 010c 114B     		ldr	r3, .L24
 223 010e 9B68     		ldr	r3, [r3, #8]
 224 0110 C3F30313 		ubfx	r3, r3, #4, #4
 225 0114 0B44     		add	r3, r3, r1
 226 0116 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 227              	.LVL4:
 330:./platform/stm32f4/system.c **** }
 228              		.loc 1 330 0
 229 0118 0B68     		ldr	r3, [r1]
 230 011a D340     		lsrs	r3, r3, r2
 231 011c 0B60     		str	r3, [r1]
 331:./platform/stm32f4/system.c **** 
 232              		.loc 1 331 0
 233 011e 10BD     		pop	{r4, pc}
 234              	.LVL5:
 235              	.L17:
 298:./platform/stm32f4/system.c ****       break;
 236              		.loc 1 298 0
 237 0120 0F4B     		ldr	r3, .L24+12
 238              	.LVL6:
 239 0122 F2E7     		b	.L23
 240              	.LVL7:
 241              	.L18:
 305:./platform/stm32f4/system.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 242              		.loc 1 305 0
 243 0124 5468     		ldr	r4, [r2, #4]
 244              	.LVL8:
 306:./platform/stm32f4/system.c ****       
 245              		.loc 1 306 0
 246 0126 5068     		ldr	r0, [r2, #4]
 311:./platform/stm32f4/system.c ****       }
 247              		.loc 1 311 0
 248 0128 5268     		ldr	r2, [r2, #4]
 308:./platform/stm32f4/system.c ****       {
 249              		.loc 1 308 0
 250 012a 6302     		lsls	r3, r4, #9
 251              	.LVL9:
 311:./platform/stm32f4/system.c ****       }
 252              		.loc 1 311 0
 253 012c C2F38812 		ubfx	r2, r2, #6, #9
 306:./platform/stm32f4/system.c ****       
 254              		.loc 1 306 0
 255 0130 00F03F00 		and	r0, r0, #63
 256              	.LVL10:
 311:./platform/stm32f4/system.c ****       }
 257              		.loc 1 311 0
 258 0134 4CBF     		ite	mi
 259 0136 0A4B     		ldrmi	r3, .L24+12
 316:./platform/stm32f4/system.c ****       }
 260              		.loc 1 316 0
 261 0138 084B     		ldrpl	r3, .L24+8
 262 013a B3FBF0F3 		udiv	r3, r3, r0
 263 013e 5343     		muls	r3, r2, r3
 264              	.LVL11:
 319:./platform/stm32f4/system.c ****       SystemCoreClock = pllvco/pllp;
 265              		.loc 1 319 0
 266 0140 044A     		ldr	r2, .L24
 267 0142 5268     		ldr	r2, [r2, #4]
 268              	.LVL12:
 269 0144 C2F30142 		ubfx	r2, r2, #16, #2
 270              	.LVL13:
 271 0148 0132     		adds	r2, r2, #1
 272 014a 5200     		lsls	r2, r2, #1
 320:./platform/stm32f4/system.c ****       break;
 273              		.loc 1 320 0
 274 014c B3FBF2F3 		udiv	r3, r3, r2
 275              	.LVL14:
 276 0150 DBE7     		b	.L23
 277              	.L25:
 278 0152 00BF     		.align	2
 279              	.L24:
 280 0154 00380240 		.word	1073887232
 281 0158 00000000 		.word	.LANCHOR0
 282 015c 0024F400 		.word	16000000
 283 0160 00127A00 		.word	8000000
 284              		.cfi_endproc
 285              	.LFE111:
 287              		.global	AHBPrescTable
 288              		.global	SystemCoreClock
 289              		.data
 290              		.align	2
 291              		.set	.LANCHOR0,. + 0
 294              	SystemCoreClock:
 295 0000 000E2707 		.word	120000000
 298              	AHBPrescTable:
 299 0004 00       		.byte	0
 300 0005 00       		.byte	0
 301 0006 00       		.byte	0
 302 0007 00       		.byte	0
 303 0008 00       		.byte	0
 304 0009 00       		.byte	0
 305 000a 00       		.byte	0
 306 000b 00       		.byte	0
 307 000c 01       		.byte	1
 308 000d 02       		.byte	2
 309 000e 03       		.byte	3
 310 000f 04       		.byte	4
 311 0010 06       		.byte	6
 312 0011 07       		.byte	7
 313 0012 08       		.byte	8
 314 0013 09       		.byte	9
 315              		.text
 316              	.Letext0:
 317              		.file 2 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_default_types.h"
 318              		.file 3 "/opt/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 319              		.file 4 "../STLibs//STM32F4xx_DSP_StdPeriph_Lib_V1.0.1/Libraries/CMSIS/Include/core_cm4.h"
 320              		.file 5 "../STLibs//STM32F4xx_DSP_StdPeriph_Lib_V1.0.1/Libraries/CMSIS/Device/ST/STM32F4xx/Include
 321              		.file 6 "../STLibs//STM32F4xx_DSP_StdPeriph_Lib_V1.0.1/Libraries/CMSIS/Device/ST/STM32F4xx/Include
DEFINED SYMBOLS
                            *ABS*:0000000000000000 system.c
     /tmp/cc5oi0Hr.s:16     .text:0000000000000000 $t
     /tmp/cc5oi0Hr.s:23     .text:0000000000000000 SystemInit
     /tmp/cc5oi0Hr.s:173    .text:00000000000000dc $d
     /tmp/cc5oi0Hr.s:182    .text:00000000000000f4 $t
     /tmp/cc5oi0Hr.s:189    .text:00000000000000f4 SystemCoreClockUpdate
     /tmp/cc5oi0Hr.s:280    .text:0000000000000154 $d
     /tmp/cc5oi0Hr.s:298    .data:0000000000000004 AHBPrescTable
     /tmp/cc5oi0Hr.s:294    .data:0000000000000000 SystemCoreClock
     /tmp/cc5oi0Hr.s:290    .data:0000000000000000 $d

NO UNDEFINED SYMBOLS
